/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/ac_view_screen/ac_viewViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

ac_viewViewBase::ac_viewViewBase() :
    buttonCallback(this, &ac_viewViewBase::buttonCallbackHandler)
{

    __background.setPosition(0, 0, 480, 272);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));

    tiledImage1.setBitmap(touchgfx::Bitmap(BITMAP_BLUE_TEXTURES_WHITEWALL_ID));
    tiledImage1.setPosition(0, 0, 480, 272);
    tiledImage1.setOffset(0, 0);

    MED.setXY(7, 143);
    MED.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
    MED.setLabelText(touchgfx::TypedText(T___SINGLEUSE_9A0A));
    MED.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    MED.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    MED.setAction(buttonCallback);

    LOW.setXY(7, 203);
    LOW.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
    LOW.setLabelText(touchgfx::TypedText(T___SINGLEUSE_C2DG));
    LOW.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    LOW.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    LOW.setAction(buttonCallback);

    HIGH.setXY(7, 83);
    HIGH.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
    HIGH.setLabelText(touchgfx::TypedText(T___SINGLEUSE_DE6L));
    HIGH.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    HIGH.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    HIGH.setAction(buttonCallback);

    toggleButton1.setXY(19, 27);
    toggleButton1.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_TOGGLEBARS_TOGGLE_ROUND_LARGE_BUTTON_OFF_ID), touchgfx::Bitmap(BITMAP_BLUE_TOGGLEBARS_TOGGLE_ROUND_LARGE_BUTTON_ON_ID));
    toggleButton1.setAction(buttonCallback);

    back.setXY(307, 203);
    back.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
    back.setLabelText(touchgfx::TypedText(T___SINGLEUSE_L163));
    back.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    back.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    back.setAction(buttonCallback);

    textArea1.setPosition(187, 16, 279, 49);
    textArea1.setColor(touchgfx::Color::getColorFromRGB(222, 173, 173));
    textArea1.setLinespacing(0);
    textArea1Buffer[0] = 0;
    textArea1.setWildcard(textArea1Buffer);
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_L5MQ));

    UP.setXY(307, 76);
    UP.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
    UP.setLabelText(touchgfx::TypedText(T___SINGLEUSE_1P03));
    UP.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    UP.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    UP.setAction(buttonCallback);

    DOWN.setXY(307, 136);
    DOWN.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
    DOWN.setLabelText(touchgfx::TypedText(T___SINGLEUSE_NOFE));
    DOWN.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    DOWN.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    DOWN.setAction(buttonCallback);

    add(__background);
    add(tiledImage1);
    add(MED);
    add(LOW);
    add(HIGH);
    add(toggleButton1);
    add(back);
    add(textArea1);
    add(UP);
    add(DOWN);
}

void ac_viewViewBase::setupScreen()
{

}

void ac_viewViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &MED)
    {
        //AC_setmed
        //When MED clicked call virtual function
        //Call AC_setmed
        AC_setmed();
    }
    else if (&src == &LOW)
    {
        //AC_setlow
        //When LOW clicked call virtual function
        //Call AC_setlow
        AC_setlow();
    }
    else if (&src == &HIGH)
    {
        //AC_sethigh
        //When HIGH clicked call virtual function
        //Call AC_sethigh
        AC_sethigh();
    }
    else if (&src == &toggleButton1)
    {
        //AC_setonoff
        //When toggleButton1 clicked call virtual function
        //Call AC_setonoff
        AC_setonoff();
    }
    else if (&src == &back)
    {
        //AC_back
        //When back clicked change screen to main_view
        //Go to main_view with no screen transition
        application().gotomain_viewScreenNoTransition();
    }
    else if (&src == &UP)
    {
        //AC_setup
        //When UP clicked call virtual function
        //Call AC_setup
        AC_setup();
    }
    else if (&src == &DOWN)
    {
        //AC_setdown
        //When DOWN clicked call virtual function
        //Call AC_setdown
        AC_setdown();
    }
}
