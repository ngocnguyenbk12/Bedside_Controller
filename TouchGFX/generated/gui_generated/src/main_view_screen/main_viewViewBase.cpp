/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/main_view_screen/main_viewViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

main_viewViewBase::main_viewViewBase() :
    buttonCallback(this, &main_viewViewBase::buttonCallbackHandler)
{

    __background.setPosition(0, 0, 480, 272);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));

    tiledImage1.setBitmap(touchgfx::Bitmap(BITMAP_BLUE_TEXTURES_WHITEWALL_ID));
    tiledImage1.setPosition(0, 0, 480, 272);
    tiledImage1.setOffset(0, 0);

    SETTING.setXY(278, 186);
    SETTING.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
    SETTING.setLabelText(touchgfx::TypedText(T___SINGLEUSE_QMF9));
    SETTING.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    SETTING.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    SETTING.setAction(buttonCallback);

    LIGHT_BUTTON.setXY(278, 126);
    LIGHT_BUTTON.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
    LIGHT_BUTTON.setLabelText(touchgfx::TypedText(T___SINGLEUSE_4N4B));
    LIGHT_BUTTON.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    LIGHT_BUTTON.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    LIGHT_BUTTON.setAction(buttonCallback);

    SERVICE_BUTTON.setXY(278, 66);
    SERVICE_BUTTON.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
    SERVICE_BUTTON.setLabelText(touchgfx::TypedText(T___SINGLEUSE_TJLN));
    SERVICE_BUTTON.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    SERVICE_BUTTON.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    SERVICE_BUTTON.setAction(buttonCallback);

    AC_BUTTON.setXY(278, 6);
    AC_BUTTON.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
    AC_BUTTON.setLabelText(touchgfx::TypedText(T___SINGLEUSE_5N94));
    AC_BUTTON.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    AC_BUTTON.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    AC_BUTTON.setAction(buttonCallback);

    analogClock1.setXY(7, 15);
    analogClock1.setBackground(BITMAP_BLUE_CLOCKS_BACKGROUNDS_CLOCK_STANDARD_BACKGROUND_ID, 116, 116);
    analogClock1.setupSecondHand(BITMAP_BLUE_CLOCKS_HANDS_CLOCK_STANDARD_SECOND_HAND_ID, 3, 66);
    analogClock1.setupMinuteHand(BITMAP_BLUE_CLOCKS_HANDS_CLOCK_STANDARD_MINUTE_HAND_ID, 7, 67);
    analogClock1.setMinuteHandSecondCorrection(false);
    analogClock1.setupHourHand(BITMAP_BLUE_CLOCKS_HANDS_CLOCK_STANDARD_HOUR_HAND_ID, 7, 52);
    analogClock1.setHourHandMinuteCorrection(false);
    analogClock1.initializeTime24Hour(10, 10, 0);

    add(__background);
    add(tiledImage1);
    add(SETTING);
    add(LIGHT_BUTTON);
    add(SERVICE_BUTTON);
    add(AC_BUTTON);
    add(analogClock1);
}

void main_viewViewBase::setupScreen()
{

}

void main_viewViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &SETTING)
    {
        //MAIN_2_SETTING
        //When SETTING clicked change screen to Setting
        //Go to Setting with no screen transition
        application().gotoSettingScreenNoTransition();
    }
    else if (&src == &LIGHT_BUTTON)
    {
        //MAIN_2_LIGHT
        //When LIGHT_BUTTON clicked change screen to light_view
        //Go to light_view with no screen transition
        application().gotolight_viewScreenNoTransition();
    }
    else if (&src == &SERVICE_BUTTON)
    {
        //MAIN_2_SER
        //When SERVICE_BUTTON clicked change screen to service_view
        //Go to service_view with no screen transition
        application().gotoservice_viewScreenNoTransition();
    }
    else if (&src == &AC_BUTTON)
    {
        //MAIN_2_AC
        //When AC_BUTTON clicked change screen to ac_view
        //Go to ac_view with no screen transition
        application().gotoac_viewScreenNoTransition();
    }
}
